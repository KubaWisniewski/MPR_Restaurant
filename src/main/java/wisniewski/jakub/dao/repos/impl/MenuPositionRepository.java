package wisniewski.jakub.dao.repos.impl;

import wisniewski.jakub.dao.mappers.IMapper;
import wisniewski.jakub.dao.repos.IMenuPositionRepository;
import wisniewski.jakub.dao.uow.IUnitOfWork;
import wisniewski.jakub.domain.MenuPosition;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

/**
 * Created by Kuba on 29.11.2017.
 */
public class MenuPositionRepository extends RepositoryBase<MenuPosition> implements IMenuPositionRepository {
    String selectByIdMenuSql = "SELECT * FROM menuPosition WHERE idMenu=?";
    PreparedStatement selectByIdMenu;
    String selectAllsql="SELECT * FROM menuPosition";
    PreparedStatement selectAll;

    public MenuPositionRepository(Connection connection, IMapper<MenuPosition> mapper, IUnitOfWork uow) throws SQLException {
        super(connection, mapper, uow);
        selectByIdMenu=connection.prepareStatement(selectByIdMenuSql);
        selectAll=connection.prepareStatement(selectAllsql);
    }

    @Override
    protected String createTableStatementSql() {
        return "CREATE TABLE menuPosition("
                + "id bigint GENERATED BY DEFAULT AS IDENTITY,"
                + "idMenu int,"
                + "nameMeal varchar(50),"
                + "description varchar(50),"
                + "price double"
                + ")";
    }

    @Override
    protected String getUpdateQuerySql() {
        return "UPDATE menuPosition SET (idMenu,nameMeal,description,price) = (?,?,?,?) WHERE id=? ";
    }

    @Override
    protected String getInsertQuerySql() {
        return "INSERT INTO menuPosition (idMenu,nameMeal,description,price) VALUES (?,?,?,?)";
    }

    @Override
    protected String getTableName() {
        return "menuPosition";
    }

    @Override
    protected void setUpdate(MenuPosition menuPosition) throws SQLException {
        update.setInt(1, menuPosition.getIdMenu());
        update.setString(2, menuPosition.getNameMeal());
        update.setString(3,menuPosition.getDescription());
        update.setDouble(4,menuPosition.getPrice());
        update.setInt(5,menuPosition.getId());
    }

    @Override
    protected void setInsert(MenuPosition menuPosition) throws SQLException {
        insert.setInt(1, menuPosition.getIdMenu());
        insert.setString(2, menuPosition.getNameMeal());
        insert.setString(3,menuPosition.getDescription());
        insert.setDouble(4,menuPosition.getPrice());
    }

    public List<MenuPosition> withIdMenu(int id) {
        List<MenuPosition> result = new ArrayList<MenuPosition>();
        try {
            selectByIdMenu.setInt(1, id);
            ResultSet rs = selectByIdMenu.executeQuery();
            while(rs.next()) result.add(mapper.map(rs));
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return result;
    }

    public List<MenuPosition> sortPrice() {
        List<MenuPosition> result = new ArrayList<MenuPosition>();
        try {
            ResultSet rs = selectAll.executeQuery();
            while(rs.next()) result.add(mapper.map(rs));
        } catch (SQLException e) {
            e.printStackTrace();
        }
        result.sort(Comparator.comparing(MenuPosition::getPrice));
        return result;
    }

    @Override
    public List<MenuPosition> getAll() {
        List<MenuPosition> result = new ArrayList<MenuPosition>();
        try {
            ResultSet rs = selectAll.executeQuery();
            while(rs.next()) result.add(mapper.map(rs));
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return result;
    }
}
