package wisniewski.jakub.dao.repos.impl;

import wisniewski.jakub.dao.mappers.IMapper;
import wisniewski.jakub.dao.repos.IMenuRepository;
import wisniewski.jakub.dao.uow.IUnitOfWork;
import wisniewski.jakub.domain.Menu;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by Kuba on 29.11.2017.
 */
public class MenuRepository extends RepositoryBase<Menu> implements IMenuRepository {
    String selectByTypeSql = "SELECT * FROM menu WHERE type=?";
    PreparedStatement selectByType;
    String selectByIdRestaurantSql="SELECT * FROM menu WHERE idRestaurant=?";
    PreparedStatement selectByIdRestaurant;

    public MenuRepository(Connection connection, IMapper<Menu> mapper, IUnitOfWork uow) throws SQLException {
        super(connection, mapper, uow);
        selectByType=connection.prepareStatement(selectByTypeSql);
        selectByIdRestaurant=connection.prepareStatement(selectByIdRestaurantSql);
    }

    @Override
    protected String createTableStatementSql() {
        return "CREATE TABLE IF NOT EXISTS menu("
                + "id bigint GENERATED BY DEFAULT AS IDENTITY,"
                + "idRestaurant int,"
                + "type varchar(50)"
                + ")";
    }

    @Override
    protected String getUpdateQuerySql() {
        return "UPDATE menu SET (idRestaurant,type) = (?,?) WHERE id=? ";
    }

    @Override
    protected String getInsertQuerySql() {
        return "INSERT INTO menu (idRestaurant,type) VALUES (?,?)";
    }

    @Override
    protected String getTableName() {
        return "menu";
    }

    @Override
    protected void setUpdate(Menu menu) throws SQLException {
        update.setInt(1, menu.getIdRestaurant());
        update.setString(2, menu.getType());
        update.setInt(3,menu.getId());
    }

    @Override
    protected void setInsert(Menu menu) throws SQLException {
        insert.setInt(1, menu.getIdRestaurant());
        insert.setString(2, menu.getType());
    }

    public List<Menu> withType(String type) {
        List<Menu> result = new ArrayList<Menu>();
        try {
            selectByType.setString(1, type);
            ResultSet rs = selectByType.executeQuery();
            while(rs.next()) result.add(mapper.map(rs));
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return result;
    }

    public List<Menu> withIdRestaurant(int id) {
        List<Menu> result = new ArrayList<Menu>();
        try {
            selectByIdRestaurant.setInt(1, id);
            ResultSet rs = selectByIdRestaurant.executeQuery();
            while(rs.next()) result.add(mapper.map(rs));
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return result;
    }
}

